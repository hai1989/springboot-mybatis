<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.spring.springboot.dao.CityDao">
	<resultMap id="BaseResultMap" type="org.spring.springboot.entity.City">
		<!--<result column="id" property="id" />-->
		<id column="id"  property="id"></id>
		<result column="province_id" property="provinceId" />
		<result column="city_name" property="cityName" />
		<result column="description" property="description" />
	</resultMap>

	<sql id="Base_Column_List">
		id, province_id, city_name, description
	</sql>

	<select id="findByName" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from city
		where city_name = #{cityName}
	</select>

	<select id="findAllByName" resultMap="BaseResultMap">
		  select
		  <include refid="Base_Column_List" />
		  from  city
	</select>

	<!-- selectKey 标签实现主键返回 -->
	<!-- keyColumn:主键对应的表中的哪一列 -->
	<!-- keyProperty：主键对应的pojo中的哪一个属性 -->
	<!-- order：设置在执行insert语句前执行查询id的sql，孩纸在执行insert语句之后执行查询id的sql -->
	<!-- resultType：设置返回的id的类型 -->
	<insert id="addCityInfo" useGeneratedKeys="true" keyProperty="id" parameterType="org.spring.springboot.entity.City">
			<selectKey keyProperty="id" keyColumn="id" order="AFTER" resultType="java.lang.Integer">
				SELECT LAST_INSERT_ID()
			</selectKey>
			insert  into city (province_id,city_name,description)
			values (#{provinceId},#{cityName},#{description});
	</insert>

	<update id="updateById" parameterType="org.spring.springboot.entity.City">
		update  city set city_name=#{cityName},description=#{description}
		where id=#{id};
	</update>

	<delete id="deleteByName"  parameterType="java.lang.String">
		delete from city
		where city_name=#{cityName};
	</delete>
</mapper>
